{"version":3,"file":"main.js","sources":["js/utils.js","js/server-loader.js","js/constant.js","js/adapt-game-levels.js","js/get-game-result.js","js/generic-view.js","js/preloader/preloader-view.js","js/intro/intro-content-view.js","js/shared/footer-view.js","js/intro/intro-presenter.js","js/greeting/greeting-content-view.js","js/greeting/greeting-presenter.js","js/timer.js","js/player.js","js/rules/rules-content-view.js","js/shared/header-view.js","js/rules/rules-presenter.js","js/level/get-level-images-markup.js","js/shared/get-progressbar-markup.js","js/level/level-content-view.js","js/level/level-presenter.js","js/statistic/get-statistic-table-markup.js","js/statistic/statistic-content-view.js","js/statistic/statistic-presenter.js","js/error-modal/error-modal-view.js","js/confirm-modal/confirm-modal-view.js","js/application.js","js/main.js"],"sourcesContent":["/**\n * Композиция рабочей области, в которой Footer — единственный элемент.\n *\n * @constant\n */\nconst FOOTER_ONLY_COMPOSITION = 1;\n\n/**\n * Очистка рабочей области.\n *\n * Если параметр shouldSaveFooter === true, тогда Footer сохраняется.\n *\n * @function cleanUpWorkspace\n * @param {node} workspace — область для очистки\n * @param {boolean} shouldSaveFooter — сохранять или нет Footer\n */\nconst cleanUpWorkspace = (workspace, shouldSaveFooter = false) => {\n  switch (shouldSaveFooter) {\n    case true:\n      while (workspace.children.length > FOOTER_ONLY_COMPOSITION) {\n        workspace.firstChild.remove();\n      }\n      break;\n\n    case false:\n      workspace.innerHTML = ``;\n      break;\n  }\n};\n\n/**\n * Наложение эффекта \"затухания\" на выбранный DOM элемент.\n *\n * @function fadeOutElement\n * @param {node} element — DOM элемент\n */\nconst fadeOutElement = (element) => {\n  element.style.transition = `opacity 0.8s ease-in`;\n  element.style.opacity = `0`;\n};\n\n/**\n * Наложение эффекта \"появления\" на выбранный DOM элемент.\n *\n * @function fadeInElement\n * @param {node} element — DOM элемент\n */\nconst fadeInElement = (element) => {\n  element.style.transition = `opacity 0.8s ease-in`;\n  element.style.opacity = `1`;\n};\n\n/**\n * Копирование всех типов данных.\n * Сложные типы копируются по значению (на выходе глубокая и независимая копия).\n *\n * @function copyDeep\n * @param {object|array|number|string|boolean|null|undefined|symbol} source — источник данных\n * @return {object|array|number|string|boolean|null|undefined|symbol} — копия данных\n */\nconst copyDeep = (source) => {\n  // Если источник — примитив.\n  if (!source || typeof source !== `object`) {\n    return source;\n  }\n\n  // Если источник — массив.\n  if (source.constructor === Array) {\n    const copiedItems = [];\n\n    for (let i = 0; i < source.length; i++) {\n      copiedItems[i] = copyDeep(source[i]);\n    }\n\n    return copiedItems;\n  }\n\n  // Если источник — объект.\n  const copiedObject = {};\n\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      copiedObject[key] = copyDeep(source[key]);\n    }\n  }\n\n  return copiedObject;\n};\n\n/**\n * Предзагрузка изображений игровых уровней.\n *\n * @function startImagesLoading\n * @param {array} gameLevels — данные игровых уровней\n * @return {object} — Promise.all свертка всех загрузок\n */\nconst startImagesLoading = (gameLevels) => {\n  // Заполнение сета URL-адресами уникальных изображений.\n  const uniqueImagesSRC = new Set();\n\n  gameLevels.forEach((level) => {\n    level.images.forEach((image) => {\n      uniqueImagesSRC.add(image.src);\n    });\n  });\n\n  // Отправка выбранных изображений на предзагрузку.\n  const imagesLoaders = [];\n\n  uniqueImagesSRC.forEach((imageSRC) => {\n    const loader = new Promise((onLoad) => {\n      const image = new Image();\n      image.src = imageSRC;\n      image.addEventListener(`load`, () => onLoad(image));\n      image.addEventListener(`error`, () => {\n        throw new Error(`Во время загрузки изображений произошла ошибка.`);\n      });\n    });\n\n    imagesLoaders.push(loader);\n  });\n\n  // Свертка всех загружаемых изображений в одну единую задачу.\n  // Возврат результата.\n  return Promise.all(imagesLoaders);\n};\n\n/**\n * Сохранение в игровую базу реальных размеров изображений.\n *\n * Размеры снимаются с предзагруженных изображений, у которых\n * на этом этапе можно определить Natural Width и Natural Height.\n *\n * @function saveImagesNaturalSizes\n * @param {array} loadedImages — предзагруженные изображения\n * @param {array} gameLevels — данные игровых уровней\n */\nconst saveImagesNaturalSizes = (loadedImages, gameLevels) => {\n  gameLevels.forEach((levelData) => {\n    levelData.images.forEach((imageData) => {\n\n      const relatedLoadedImage = loadedImages.find((it) => imageData.src === it.src);\n      imageData.naturalSize.width = relatedLoadedImage.naturalWidth;\n      imageData.naturalSize.height = relatedLoadedImage.naturalHeight;\n\n    });\n  });\n};\n\n/**\n * Масштабирование изображения под размеры контейнера.\n *\n * @function resizeImage\n * @param {object} containerSize — размеры контейнера (width, height)\n * @param {object} imageSize — размеры изображения (width, height)\n * @return {object} — размеры изображения после масштабирования\n */\nconst resizeImage = (containerSize, imageSize) => {\n  const ratio = Math.min(containerSize.width / imageSize.width, containerSize.height / imageSize.height);\n\n  return {\n    width: imageSize.width * ratio,\n    height: imageSize.height * ratio\n  };\n};\n\nexport {\n  cleanUpWorkspace,\n  copyDeep,\n  fadeOutElement,\n  fadeInElement,\n  startImagesLoading,\n  saveImagesNaturalSizes,\n  resizeImage\n};\n","/**\n * Уникальный идентификатор приложения.\n *\n * @constant\n */\nconst APP_ID = `666`;\n\n/**\n * HTTP Status Codes: Success. Диапазон кодов типа \"Success\".\n *\n * @enum {number}\n */\nconst HTTPSuccessCode = {\n  FIRST: 200,\n  LAST: 299\n};\n\n/**\n * URL сервера.\n *\n * @enum {string}\n */\nconst ServerURL = {\n  /** URL сервера для получения игровых данных. */\n  GAME_LEVELS: `https://es.dump.academy/pixel-hunter/questions`,\n\n  /** URL сервера для отгрузки текущего результата игры и загрузки истории игр. */\n  STATISTIC: `https://es.dump.academy/pixel-hunter/stats/:appId-:username`\n};\n\n/**\n * Плейсхолдеры для подстановки данных в Server Upload URL\n *\n * @enum {string}\n */\nconst URLPlaceholder = {\n  /** Место в Server Upload URL для подстановки ID приложения. */\n  APP_ID: `:appId`,\n\n  /** Место в Server Upload URL для подстановки имени игрока. */\n  USERNAME: `:username`\n};\n\n/**\n * Проверка статуса запроса к серверу.\n *\n * @function checkFetchStatus\n * @param {object} response — объект, ответ на запрос\n * @return {object} — возврат успешного ответа либо выброс ошибки\n */\nconst checkFetchStatus = (response) => {\n  if (response.status >= HTTPSuccessCode.FIRST && response.status <= HTTPSuccessCode.LAST) {\n    return response;\n  } else {\n    throw new Error(`При попытке обратиться к серверу произошла ошибка.\n    Код ${response.status}: ${response.statusText}.`);\n  }\n};\n\n/**\n * Загрузчик данных с сервера / на сервер.\n */\nclass ServerLoader {\n  /**\n   * Загрузка и преобразование в JSON всех игровых данных.\n   *\n   * @static\n   * @method downloadGameLevels\n   * @return {object} — promise с данными\n   */\n  static downloadGameLevels() {\n    return window.fetch(ServerURL.GAME_LEVELS)\n                       .then(checkFetchStatus)\n                       .then((response) => response.json());\n  }\n\n  /**\n   * Отправка на сервер результата последней игры.\n   *\n   * @static\n   * @method uploadGameResult\n   * @param {object} gameResult — детальная статистика прошедшей игры\n   * @return {object} — promise с данными\n   */\n  static uploadGameResult(gameResult) {\n    const playerName = gameResult.name;\n    const serverURL = this._getStatisticServerURL(playerName);\n\n    return window.fetch(serverURL, {\n      method: `POST`,\n      body: JSON.stringify(gameResult),\n      headers: {\n        'Content-Type': `application/json`\n      }\n    })\n    .then(checkFetchStatus);\n  }\n\n  /**\n   * Загрузка и преобразование в JSON игровой истории.\n   *\n   * @static\n   * @method downloadGameRecords\n   * @param {string} playerName — имя игрока\n   * @return {object} — promise с данными\n   */\n  static downloadGameRecords(playerName) {\n    const serverURL = this._getStatisticServerURL(playerName);\n\n    return window.fetch(serverURL)\n                        .then(checkFetchStatus)\n                        .then((response) => response.json());\n  }\n\n  /**\n   * Получение динамически вычисляемого URL сервера статистики.\n   *\n   * @static\n   * @method _getStatisticServerURL\n   * @param {string} playerName — имя игрока\n   * @return {string} — актуальный URL сервера\n   */\n  static _getStatisticServerURL(playerName) {\n    return ServerURL.STATISTIC\n                      .replace(URLPlaceholder.APP_ID, () => APP_ID)\n                      .replace(URLPlaceholder.USERNAME, () => playerName);\n  }\n}\n\nexport default ServerLoader;\n","/**\n* Маркировка ответа игрока.\n* Проставляется игроку \"штампом\" в профиль после каждого ответа.\n*\n* @enum {string}\n*/\nconst AnswerType = {\n  /** FAST — быстрый правильный ответ. */\n  FAST: `FAST`,\n\n  /** STANDARD — стандартный правильный ответ. */\n  STANDARD: `STANDARD`,\n\n  /** SLOW — медленный правильный ответ. */\n  SLOW: `SLOW`,\n\n  /** WRONG — неверный ответ. */\n  WRONG: `WRONG`,\n\n  /** UNKNOWN — статус ответа неизвестен (игрок еще не дал ответ). */\n  UNKNOWN: `UNKNOWN`\n};\n\n/**\n * Маркировка достижения (верный ответ, быстрый ответ, сохраненная жизнь, etc) ==>\n * HTML класс-модификатор подходящей иконки progressbar.\n *\n * @type {Map.<string, string>}\n */\nconst AchievementToIconClass = {\n  [AnswerType.FAST]: `stats__result--fast`,\n  [AnswerType.STANDARD]: `stats__result--correct`,\n  [AnswerType.SLOW]: `stats__result--slow`,\n  [AnswerType.WRONG]: `stats__result--wrong`,\n  [AnswerType.UNKNOWN]: `stats__result--unknown`,\n  SAVED_LIFE: `stats__result--alive`\n};\n\n/**\n * Маркировки игровых уровней.\n * Человекочитаемый тип уровня ==> маркировка по базе данных.\n *\n * @enum {string}\n */\nconst LevelType = {\n  /** Тип уровня: 1 изображение — tinder like */\n  ONE_IMAGE: `tinder-like`,\n\n  /** Тип уровня: 2 изображения — two of two */\n  TWO_IMAGES: `two-of-two`,\n\n  /** Тип уровня: 3 изображения — one of three */\n  THREE_IMAGES: `one-of-three`\n};\n\n/**\n * Тип уровня ==> HTML класс-модификатор формы игрового контента.\n *\n * @type {Map.<string, string>}\n */\nconst levelTypeToFormClass = {\n  [LevelType.ONE_IMAGE]: `game__content--wide`,\n  [LevelType.TWO_IMAGES]: ``,\n  [LevelType.THREE_IMAGES]: `game__content--triple`\n};\n\n/**\n * Крайние ситуации для игрока.\n *\n * @enum {number}\n */\nconst Limit = {\n  /** MAX LIVES — Максимальное количество жизней игрока. */\n  MAX_LIVES: 3,\n\n  /** LIVES WASTED — Все жизни потрачены. */\n  LIVES_WASTED: -1,\n\n  /** MAX LEVEL — Последний допустимый уровень (10-ый). */\n  MAX_LEVEL: 10,\n\n  /** MAX LEVEL TIME — Максимально допустимое время прохождение уровня. */\n  MAX_LEVEL_TIME: 30\n};\n\n/**\n * Вознаграждения или штрафы, назначаемые игроку за ответы.\n *\n * @enum {number}\n */\nconst Rate = {\n  /** STANDARD REWARD за стандартный по скорости ответ: +100 баллов. */\n  STANDARD_REWARD: 100,\n\n  /** FAST SPEED BONUS за быстрый ответ: +50 баллов */\n  FAST_SPEED_BONUS: 50,\n\n  /** SAVED LIFE BONUS за сохраненную единицу жизни: +50 баллов. */\n  SAVED_LIFE_BONUS: 50,\n\n  /** SLOW_SPEED_PENALTY за медлительность: -50 очков. */\n  SLOW_SPEED_PENALTY: -50\n};\n\n/**\n * Необходимое количество ответов для успешного прохождения игры.\n *\n * @constant\n */\nconst REQUIRED_ANSWERS_NUMBER = 10;\n\n/**\n * Счет.\n *\n * @enum {number}\n */\nconst Score = {\n  /** ZERO — исходный счет либо просто ноль очков. */\n  ZERO: 0,\n\n  /** NEGATIVE — счет отрицательный, игра проиграна. */\n  NEGATIVE: -1\n};\n\n/**\n * Сдвиг индекса, чтобы счет шел не с нуля, а с единицы.\n *\n * @constant\n */\nconst ZERO_INDEX_SHIFT = 1;\n\nexport {\n  AnswerType,\n  AchievementToIconClass,\n  LevelType,\n  levelTypeToFormClass,\n  Limit,\n  Rate,\n  REQUIRED_ANSWERS_NUMBER,\n  Score,\n  ZERO_INDEX_SHIFT\n};\n","import {LevelType} from './constant.js';\n\n/**\n * Состояние, когда изображение определенного типа представлено\n * в единственном числе, например 1 фото к 2-м картинам или 1 картина к 2-м фото.\n *\n * @constant\n */\nconst SINGLE_REPRESENTATIVE = 1;\n\n/**\n * Адаптация серверной структуры данных на более удобную для работы.\n *\n * @function adaptGameLevels\n * @param {array} untouchedLevels — данные с сервера в исходном виде\n * @return {object} — игровые данные, адаптированные под фронденд\n */\nconst adaptGameLevels = (untouchedLevels) => {\n  const adaptedLevels = untouchedLevels.map((level) => {\n    return {\n      type: level.type,\n      task: level.question,\n      images: level.answers.map((image) => {\n        // Смена формата хранения правильных ответов на более удобный.\n        let correctAnswer = null;\n        if (level.type === LevelType.ONE_IMAGE || level.type === LevelType.TWO_IMAGES) {\n          correctAnswer = image.type;\n        } else {\n          const thisImageTypeRepresentatives = level.answers.filter((it) => it.type === image.type).length;\n          correctAnswer = thisImageTypeRepresentatives === SINGLE_REPRESENTATIVE;\n        }\n\n        // Смена формата хранения размеров изображения на более удобный.\n        return {\n          src: image.image.url,\n          naturalSize: {\n            width: null,\n            height: null\n          },\n          correctAnswer\n        };\n      })\n\n    };\n  });\n\n  return adaptedLevels;\n};\n\nexport default adaptGameLevels;\n","import {AnswerType, Rate, REQUIRED_ANSWERS_NUMBER, Score} from './constant.js';\n\n/**\n * Расчет результатов игры.\n *\n * @function getGameResult\n * @param {object} player — профиль игрока (ответы, жизни, etc)\n * @return {object} — детальная результирующая статистика\n */\nconst getGameResult = (player) => {\n  // Получение имени игрока, маркировки ответов и оставшегося количества жизней.\n  const [playerName, playerAnswers, playerLives] = [player.name, player.answers, player.lives];\n\n  // Генерация результирующей статистики\n  const result = {\n    name: playerName,\n    hasPlayerWon: null,\n    allAnswers: playerAnswers,\n    totalScore: null\n  };\n\n  // Если игрок ответил не на все вопросы — Game Over.\n  if (playerAnswers.length < REQUIRED_ANSWERS_NUMBER) {\n    result.hasPlayerWon = false;\n    result.totalScore = Score.NEGATIVE;\n    return result;\n  }\n\n  // Если игрок ответил на вопросы — подсчет результатов.\n  result.hasPlayerWon = true;\n  result.correctAnswers = 0;\n  result.fastAnswers = 0;\n  result.slowAnswers = 0;\n  result.savedLives = playerLives;\n\n  result.totalScore = playerAnswers.reduce((accumulator, answer) => {\n    switch (answer) {\n      case AnswerType.FAST:\n        result.correctAnswers++;\n        result.fastAnswers++;\n        return accumulator + Rate.STANDARD_REWARD + Rate.FAST_SPEED_BONUS;\n\n      case AnswerType.SLOW:\n        result.correctAnswers++;\n        result.slowAnswers++;\n        return accumulator + Rate.STANDARD_REWARD + Rate.SLOW_SPEED_PENALTY;\n\n      case AnswerType.STANDARD:\n        result.correctAnswers++;\n        return accumulator + Rate.STANDARD_REWARD;\n\n      default: // подразумевается — AnswerType.WRONG\n        return accumulator;\n    }\n  }, Score.ZERO);\n\n  // Надбавка бонуса за сохраненные жизни.\n  result.totalScore += (playerLives) ? playerLives * Rate.SAVED_LIFE_BONUS : Score.ZERO;\n\n  return result;\n};\n\nexport default getGameResult;\n","/**\n * Родительский класс всех View.\n */\nclass GenericView {\n  /**\n   * Получение html разметки View.\n   *\n   * @abstract\n   * @type {string}\n   */\n  get markup() {}\n\n  /**\n   * Создание DOM элемента View на основе html разметки.\n   *\n   * @type {node}\n   */\n  get node() {\n    const node = document.createElement(`template`);\n    node.innerHTML = this.markup.trim();\n\n    return node.content;\n  }\n\n  /**\n   * Формирование законченного View, навешивание обработчиков.\n   *\n   * @type {node}\n   */\n  get view() {\n    if (!this._view) {\n      this._view = this.node;\n      this.subscribe();\n    }\n\n    return this._view;\n  }\n\n  /**\n   * Подписка на события внутри View.\n   *\n   * @abstract\n   * @method subscribe\n   */\n  subscribe() {}\n}\n\nexport default GenericView;\n","import GenericView from '../generic-view.js';\n\n/**\n * Конструктор Preloader View.\n * Вид предзагрузчика данных.\n *\n * @extends GenericView\n */\nclass PreloaderView extends GenericView {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Получение html разметки View.\n   *\n   * @type {string}\n   */\n  get markup() {\n    return `\n      <div class=\"preloader\">\n        <svg class=\"preloader__image\" xmlns=\"http://www.w3.org/2000/svg\" width=\"150px\"  height=\"150px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" style=\"background: none;\">\n          <circle cx=\"50\" cy=\"50\" fill=\"none\" stroke-linecap=\"round\" r=\"40\" stroke-width=\"5\" stroke=\"#eab02b\"     stroke-dasharray=\"62.83185307179586 62.83185307179586\" transform=\"rotate(250.5 50 50)\">\n            <animateTransform attributeName=\"transform\" type=\"rotate\" calcMode=\"linear\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"4s\" begin=\"0s\" repeatCount=\"indefinite\"></animateTransform>\n          </circle>\n          <circle cx=\"50\" cy=\"50\" fill=\"none\" stroke-linecap=\"round\" r=\"34\" stroke-width=\"5\" stroke=\"#de1f1f\"     stroke-dasharray=\"53.40707511102649 53.40707511102649\" stroke-dashoffset=\"53.40707511102649\" transform=\"rotate(-250.5 50   50)\">\n            <animateTransform attributeName=\"transform\" type=\"rotate\" calcMode=\"linear\" values=\"0 50 50;-360 50 50\" keyTimes=\"0;1\" dur=\"4s\" begin=\"0s\" repeatCount=\"indefinite\"></animateTransform>\n          </circle>\n        </svg>\n\n        <p class=\"preloader__message\">Идет загрузка данных...</p>\n      </div>`;\n  }\n}\n\nexport default PreloaderView;\n","import GenericView from '../generic-view.js';\n\n/**\n * Конструктор Intro Content View.\n * Контентная часть Intro экрана.\n *\n * @extends GenericView\n */\nclass IntroContentView extends GenericView {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Получение html разметки View.\n   *\n   * @type {string}\n   */\n  get markup() {\n    return `\n      <div id=\"main\" class=\"central__content\">\n        <div id=\"intro\" class=\"intro\">\n\n          <h1 class=\"intro__asterisk\">*</h1>\n\n          <p class=\"intro__motto\">\n            <sup>*</sup>\n            Это не фото. Это рисунок маслом нидерландского художника-фотореалиста Tjalf Sparnaay.\n          </p>\n\n        </div>\n      </div>`;\n  }\n}\n\nexport default IntroContentView;\n","import GenericView from '../generic-view.js';\n\n/**\n * Конструктор Footer View.\n * Footer всех экранов.\n *\n * @extends GenericView\n */\nclass FooterView extends GenericView {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Получение html разметки View.\n   *\n   * @type {string}\n   */\n  get markup() {\n    return `\n      <footer class=\"footer\">\n        <a href=\"https://htmlacademy.ru\" class=\"social-link social-link--academy\">HTML Academy</a>\n\n        <span class=\"footer__made-in\">\n          Сделано в <a href=\"https://htmlacademy.ru\" class=\"footer__link\">HTML Academy</a> &copy; 2016\n        </span>\n\n        <div class=\"footer__social-links\">\n          <a href=\"https://twitter.com/htmlacademy_ru\" class=\"social-link  social-link--tw\">Твиттер</a>\n          <a href=\"https://www.instagram.com/htmlacademy/\" class=\"social-link  social-link--ins\">Инстаграм</a>\n          <a href=\"https://www.facebook.com/htmlacademy\" class=\"social-link  social-link--fb\">Фэйсбук</a>\n          <a href=\"https://vk.com/htmlacademy\" class=\"social-link  social-link--vk\">Вконтакте</a>\n        </div>\n      </footer>`;\n  }\n}\n\nexport default FooterView;\n","import IntroContentView from './intro-content-view.js';\nimport FooterView from '../shared/footer-view.js';\n\n/**\n * Presenter Intro экрана.\n */\nclass IntroPresenter {\n  constructor() {\n    // Контентная часть экрана.\n    this._content = new IntroContentView();\n\n    // Footer экрана.\n    this._footer = new FooterView();\n\n    // Сборка компонентов в контейнер.\n    this._screen = document.createDocumentFragment();\n    this._screen.append(this._content.view, this._footer.view);\n  }\n\n  /**\n   * Выдача собранного компонента.\n   *\n   * @type {node}\n   */\n  get screen() {\n    return this._screen;\n  }\n}\n\nexport default IntroPresenter;\n","import GenericView from '../generic-view.js';\n\n/**\n * Конструктор Greeting Content View.\n * Контентная часть приветственного экрана.\n *\n * @extends GenericView\n */\nclass GreetingContentView extends GenericView {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Получение html разметки View.\n   *\n   * @type {string}\n   */\n  get markup() {\n    return `\n      <div class=\"greeting central--blur\">\n\n        <div class=\"greeting__logo\">\n          <img src=\"img/logo_big.png\" width=\"201\" height=\"89\" alt=\"Pixel Hunter\">\n        </div>\n\n        <h1 class=\"greeting__asterisk\">*</h1>\n\n        <div class=\"greeting__challenge\">\n          <h3>Лучшие художники-фотореалисты бросают&nbsp;тебе&nbsp;вызов!</h3>\n\n          <p>Правила игры просты.<br>\n            Нужно отличить рисунок&nbsp;от фотографии и сделать выбор.<br>\n            Задача кажется тривиальной, но не думай, что все так просто.<br>\n            Фотореализм обманчив и коварен.<br>\n            Помни, главное — смотреть очень внимательно.\n          </p>\n        </div>\n\n        <div class=\"greeting__continue\">\n          <span>\n            <img src=\"img/arrow_right.svg\" width=\"64\" height=\"64\" alt=\"Next\">\n          </span>\n        </div>\n\n      </div>`;\n  }\n\n  /**\n   * Подписка на события внутри View.\n   *\n   * @method subscribe\n   */\n  subscribe() {\n    const nextButton = this._view.querySelector(`.greeting__continue`);\n    nextButton.addEventListener(`click`, this.onNextButtonClick);\n  }\n\n  /**\n   * Callback.\n   * Вызывается по клику на кнопке \"Вперед\".\n   *\n   * @abstract\n   * @method onNextButtonClick\n   */\n  onNextButtonClick() {}\n}\n\nexport default GreetingContentView;\n","import Application from '../application.js';\nimport GreetingContentView from './greeting-content-view.js';\n\n/**\n * Presenter приветственного экрана.\n */\nclass GreetingPresenter {\n  constructor() {\n    // Контентная часть экрана.\n    this._content = new GreetingContentView();\n    this._content.onNextButtonClick = Application.renderRules;\n  }\n\n  /**\n   * Выдача собранного компонента.\n   *\n   * @type {node}\n   */\n  get screen() {\n    return this._content.view;\n  }\n}\n\nexport default GreetingPresenter;\n","/**\n * Конструктор таймера.\n */\nclass Timer {\n  /**\n   * @param {number} timerTime — время, на которое установлен таймер (в секундах)\n   */\n  constructor(timerTime) {\n    if (!timerTime) {\n      throw new Error(`Таймеру необходимо задать время работы.`);\n    }\n\n    if (typeof timerTime !== `number` || timerTime <= 0) {\n      throw new Error(`Время таймера должно быть числом больше нуля.`);\n    }\n\n    // Рабочее поле с временем таймера, изменяется.\n    this._time = timerTime;\n\n    // Резервное поле, неизменно.\n    // Хранит настройку таймера по умолчанию, отдает при сбросе.\n    this._timeBackup = timerTime;\n  }\n\n  /**\n   * Получение запаса времени таймера.\n   *\n   * @type {number}\n   */\n  get time() {\n    return this._time;\n  }\n\n  /**\n   * Получение статуса таймера: отработал или нет.\n   * Таймер считается отработавшим, когда в запасе остается 0 (ноль) секунд.\n   *\n   * @type {boolean} — таймер отработал? true || false\n   */\n  get isFinished() {\n    return this._time === 0;\n  }\n\n  /**\n   * Уменьшение запаса таймера на n-секунд (по умолчанию — на 1 секунду).\n   * Блокировка, когда запас времени доходит до 0 (нуля) секунд.\n   *\n   * @method tick\n   * @param {number} seconds — количество секунд, на которое уменьшается запас таймера\n   */\n  tick(seconds = 1) {\n    this._time = (this._time - seconds > 0) ? this._time -= seconds : 0;\n  }\n\n  /**\n   * Сброс таймера к исходной установке времени.\n   *\n   * @method reset\n   */\n  reset() {\n    this._time = this._timeBackup;\n  }\n}\n\nexport default Timer;\n","import {copyDeep} from './utils.js';\nimport {Limit} from './constant.js';\nimport Timer from './timer.js';\n\n/**\n * Профиль игрока (шаблон).\n *\n * @constant\n */\nconst INITIAL_PLAYER_STATE = Object.freeze({\n  /** Ответы игрока. */\n  answers: [],\n\n  /** Текущий уровень игрока. */\n  level: 0,\n\n  /** Оставшиеся жизни игрока. */\n  lives: 3\n});\n\n/**\n * Профиль игрока (модель данных).\n */\nclass Player {\n  /**\n   * @param {string} playerName — имя игрока\n   */\n  constructor(playerName) {\n    this.name = playerName;\n    this._reset();\n  }\n\n  /**\n   * Получение текущего уровня игрока.\n   *\n   * @type {number}\n   */\n  get level() {\n    return this._state.level;\n  }\n\n  /**\n   * Получение ответа: есть ли уровни в запасе.\n   *\n   * @type {boolean}\n   */\n  get hasNextLevel() {\n    return this._state.level !== Limit.MAX_LEVEL;\n  }\n\n  /**\n   * Получение количества жизней игрока.\n   *\n   * @type {number}\n   */\n  get lives() {\n    return this._state.lives;\n  }\n\n  /**\n   * Получение ответа: остались ли у игрока жизни.\n   *\n   * @type {boolean}\n   */\n  get isAlive() {\n    return this._state.lives !== Limit.LIVES_WASTED;\n  }\n\n  /**\n   * Получение списка ответов игрока.\n   *\n   * @type {array}\n   */\n  get answers() {\n    return this._state.answers;\n  }\n\n  /**\n   * Получение таймера игрока.\n   *\n   * @type {object}\n   */\n  get timer() {\n    return this._timer;\n  }\n\n  /**\n   * Запись ответа в профиль игрока.\n   *\n   * @method saveAnswer\n   * @param {string} answer — маркировка ответа\n   */\n  saveAnswer(answer) {\n    this._state.answers.push(answer);\n  }\n\n  /**\n   * Увеличение уровня игрока.\n   *\n   * @method levelUp\n   */\n  levelUp() {\n    this._state.level++;\n  }\n\n  /**\n   * Снятие жизни за ошибку.\n   *\n   * @method decreaseLives\n   */\n  decreaseLives() {\n    this._state.lives--;\n  }\n\n  /**\n   * Сброс профиля игрока к настройкам по умолчанию.\n   *\n   * @method _reset\n   */\n  _reset() {\n    this._state = null;\n    this._state = copyDeep(INITIAL_PLAYER_STATE);\n    this._timer = new Timer(Limit.MAX_LEVEL_TIME);\n  }\n}\n\nexport default Player;\n","import GenericView from '../generic-view.js';\n\n/**\n * Конструктор Rules Content View.\n * Контентная часть экрана с правилами игры.\n *\n * @extends GenericView\n */\nclass RulesContentView extends GenericView {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Получение html разметки View.\n   *\n   * @type {string}\n   */\n  get markup() {\n    return `\n      <div class=\"rules\">\n        <h1 class=\"rules__title\">Правила</h1>\n\n        <p class=\"rules__description\">\n          Угадай 10 раз для каждого изображения фото <img src=\"img/photo_icon.png\" width=\"16\" height=\"16\">\n          или рисунок <img src=\"img/paint_icon.png\" width=\"16\" height=\"16\" alt=\"\">.<br>\n          Фотографиями или рисунками могут быть оба изображения.<br>\n          На каждую попытку отводится 30 секунд.<br>\n          Ошибиться можно не более 3 раз.<br><br>\n          Готовы?\n        </p>\n\n        <form class=\"rules__form\">\n          <input class=\"rules__input\" type=\"text\" placeholder=\"Ваше Имя\">\n          <button class=\"rules__button  continue\" type=\"submit\" disabled>Go!</button>\n        </form>\n      </div>`;\n  }\n\n  /**\n   * Подписка на события внутри View.\n   *\n   * @method subscribe\n   */\n  subscribe() {\n    // Начало игры невозможно до тех пор, пока\n    // в поле \"Ваше имя\" не будет введено какое-либо значение.\n    const playerNameInput = this._view.querySelector(`input.rules__input`);\n    const startButton = this._view.querySelector(`button.rules__button`);\n    playerNameInput.addEventListener(`input`, () => {\n      startButton.disabled = (playerNameInput.value) ? false : true;\n    });\n\n    // Инициализация игры.\n    const form = this._view.querySelector(`form.rules__form`);\n    form.addEventListener(`submit`, (evt) => {\n      evt.preventDefault();\n\n      this.onGameStart(playerNameInput.value);\n    });\n  }\n\n  /**\n   * Callback.\n   * Вызывается при инициализации новой игры.\n   *\n   * @abstract\n   * @method onGameStart\n   */\n  onGameStart() {}\n}\n\nexport default RulesContentView;\n","import {Limit} from '../constant.js';\nimport GenericView from '../generic-view.js';\n\n/**\n * Иконки жизней игрока, их виды.\n *\n * @enum {string}\n */\nconst LifeIcon = {\n  /** WASTED — Потраченная жизнь, контур сердца. */\n  WASTED: `<img class=\"game__heart\" src=\"img/heart__empty.svg\" width=\"32\" height=\"32\" alt=\"Life\">`,\n\n  /** SAVED — Сохраненная жизнь, сердце в сплошной заливке. */\n  SAVED: `<img class=\"game__heart\" src=\"img/heart__full.svg\" width=\"32\" height=\"32\" alt=\"Life\">`\n};\n\n/**\n * Время в секундах, при котором плейсхолдер таймера начинает мигать.\n *\n * @constant\n */\nconst TIMER_BLINK_TIME = 5;\n\n/**\n * Класс-модификатор, задающий плейсхолдеру таймера анимацию мигания.\n * Модификация добавлена в ./sass/game.scss для класса .game__timer\n *\n * @constant\n */\nconst TIMER_BLINK_CLASS_MODIFIER = `game__timer--blink`;\n\n/**\n * Конструктор Header View.\n * Header всех экранов.\n *\n * @extends GenericView\n */\nclass HeaderView extends GenericView {\n  /**\n   * @param {number|undefined} playerLives — количество жизней игрока (опционально)\n   * @param {object|undefined} timer — таймер (опционально)\n   */\n  constructor(playerLives, timer) {\n    super();\n\n    this._playerLives = (typeof playerLives !== void 0) ? playerLives : undefined;\n    this._timer = (typeof timer !== void 0) ? timer : undefined;\n  }\n\n  /**\n   * Получение html разметки View.\n   *\n   * @type {string}\n   */\n  get markup() {\n    let [livesIndicator, timerIndicator] = [``, ``];\n\n    if (this._playerLives !== void 0 && this._timer !== void 0) {\n      // Если передан таймер — он будет отрисован.\n      timerIndicator = `<h1 class=\"game__timer\">${this._timer.time}</h1>`;\n\n      // Если передано количество жизней игрока — оно будет отрисовано.\n      const livesIcons = [\n        ...new Array(Limit.MAX_LIVES - this._playerLives).fill(LifeIcon.WASTED),\n        ...new Array(this._playerLives).fill(LifeIcon.SAVED)\n      ].join(``);\n      livesIndicator = `<div class=\"game__lives\">${livesIcons}</div>`;\n    }\n\n    return `\n      <header class=\"header\">\n        <div class=\"header__back\">\n          <button class=\"back\">\n            <img src=\"img/arrow_left.svg\" width=\"45\" height=\"45\" alt=\"Back\">\n            <img src=\"img/logo_small.svg\" width=\"101\" height=\"44\">\n          </button>\n        </div>\n\n        ${timerIndicator} ${livesIndicator}\n      </header>`;\n  }\n\n  /**\n   * Подписка на события внутри View.\n   *\n   * @method subscribe\n   */\n  subscribe() {\n    // Сохранение плейсхолдера таймера.\n    // Он используется для точечного обновления времени на экране.\n    this._timerPlaceholder = this._view.querySelector(`.game__timer`);\n\n    const backButton = this._view.querySelector(`button.back`);\n    backButton.addEventListener(`click`, this.onBackButtonClick);\n  }\n\n  /**\n   * При обновлении таймера — обновление плейсхолдера таймера на экране.\n   * За n-секунд до конца таймера у плейсхолдера включается анимация мигания.\n   *\n   * @method updateTimerPlaceholder\n   * @param {number} time — время таймера\n   */\n  updateTimerPlaceholder(time) {\n    if (time === TIMER_BLINK_TIME) {\n      this._timerPlaceholder.classList.add(TIMER_BLINK_CLASS_MODIFIER);\n    }\n\n    this._timerPlaceholder.textContent = time;\n  }\n\n  /**\n   * Callback.\n   * Вызывается по клику на кнопке \"Назад\".\n   *\n   * @abstract\n   * @method onBackButtonClick\n   */\n  onBackButtonClick() {}\n}\n\nexport default HeaderView;\n","import Application from '../application.js';\nimport Player from '../player.js';\nimport RulesContentView from './rules-content-view.js';\nimport HeaderView from '../shared/header-view.js';\n\n/**\n * Presenter экрана с правилами игры.\n */\nclass RulesPresenter {\n  constructor() {\n    // Header экрана.\n    this._header = new HeaderView();\n    this._header.onBackButtonClick = Application.renderConfirmModal;\n\n    // Контентная часть экрана.\n    this._content = new RulesContentView();\n    this._content.onGameStart = (playerName) => {\n      // Создание игрового профиля, сброс к значениям по умолчанию.\n      const player = new Player(playerName);\n      Application.renderLevel(player);\n    };\n\n    // Сборка компонентов в контейнер.\n    this._screen = document.createDocumentFragment();\n    this._screen.append(this._header.view, this._content.view);\n  }\n\n  /**\n   * Выдача собранного компонента.\n   *\n   * @type {node}\n   */\n  get screen() {\n    return this._screen;\n  }\n}\n\nexport default RulesPresenter;\n","import {LevelType, ZERO_INDEX_SHIFT} from '../constant.js';\n\n/**\n * Тип уровня ==> Классы-модификаторы для label опций.\n *\n * @type {Map.<string, object>}\n */\nconst levelTypeToOptionClass = {\n  [LevelType.ONE_IMAGE]: {\n    PHOTO: `game__answer--photo`,\n    PAINTING: `game__answer--paint`\n  },\n  [LevelType.TWO_IMAGES]: {\n    PHOTO: `game__answer--photo`,\n    PAINTING: `game__answer--wide  game__answer--paint`\n  }\n};\n\n/**\n * Получение разметки изображений-заданий игрового уровня.\n *\n * @function getLevelImagesMarkup\n * @param {object} levelData — данные игрового уровня\n * @return {string} — разметка изображений\n */\nconst getLevelImagesMarkup = (levelData) => {\n  let markup = null;\n\n  // Если тип уровня — 1 или 2 изображения:\n  // Игровой контейнер заполнится изображениями из данного блока.\n  if (levelData.type === LevelType.ONE_IMAGE || levelData.type === LevelType.TWO_IMAGES) {\n    markup = levelData.images.map((image, i) => {\n      const optionClassModifier = levelTypeToOptionClass[levelData.type];\n\n      return `\n        <div class=\"game__option\">\n          <img src=\"${image.src}\" alt=\"Option ${i + ZERO_INDEX_SHIFT}\">\n          <label class=\"game__answer ${optionClassModifier.PHOTO}\">\n            <input name=\"question${i + ZERO_INDEX_SHIFT}\" type=\"radio\" value=\"photo\">\n            <span>Фото</span>\n          </label>\n          <label class=\"game__answer ${optionClassModifier.PAINTING}\">\n            <input name=\"question${i + ZERO_INDEX_SHIFT}\" type=\"radio\" value=\"painting\">\n            <span>Рисунок</span>\n          </label>\n        </div>`;\n    }).join(``);\n  }\n\n  // Если тип уровня — 3 изображения:\n  // Игровой контейнер заполнится изображениями из данного блока.\n  if (levelData.type === LevelType.THREE_IMAGES) {\n    markup = levelData.images.map((image, i) => {\n      return `\n        <div class=\"game__option\">\n          <img src=\"${image.src}\" alt=\"Option ${i + ZERO_INDEX_SHIFT}\">\n        </div>`;\n    }).join(``);\n  }\n\n  return markup;\n};\n\nexport default getLevelImagesMarkup;\n","import {AchievementToIconClass, AnswerType, REQUIRED_ANSWERS_NUMBER} from '../constant.js';\n\n/**\n * Получение разметки — progressbar.\n *\n * @function getProgressbarMarkup\n * @param {array} playerAnswers — данные по ответам игрока\n * @return {string} — строка с разметкой\n */\nconst getProgressbarMarkup = (playerAnswers) => {\n  // Заполнение progressbar иконками, отображающими ход игры.\n  const progressIndicator = new Array(REQUIRED_ANSWERS_NUMBER)\n                                    .fill()\n                                    .map((indicator, i) => {\n                                      const iconClass = AchievementToIconClass[playerAnswers[i] || AnswerType.UNKNOWN];\n                                      return `<li class=\"stats__result ${iconClass}\"></li>`;\n                                    })\n                                    .join(``);\n\n  return `<ul class=\"stats\">${progressIndicator}</ul>`;\n};\n\nexport default getProgressbarMarkup;\n","import {LevelType, levelTypeToFormClass} from '../constant.js';\nimport GenericView from '../generic-view.js';\nimport getLevelImagesMarkup from './get-level-images-markup.js';\nimport getProgressbarMarkup from '../shared/get-progressbar-markup.js';\nimport {resizeImage} from '../utils.js';\n\n/**\n * Тип уровня ==> Размер изображения по умолчанию (100% размера контейнера).\n *\n * @type {Map.<string, object>}\n */\nconst levelTypeToImageContainerSize = {\n  [LevelType.ONE_IMAGE]: {\n    width: 705,\n    height: 455\n  },\n  [LevelType.TWO_IMAGES]: {\n    width: 468,\n    height: 455\n  },\n  [LevelType.THREE_IMAGES]: {\n    width: 304,\n    height: 455\n  }\n};\n\n/**\n * Необходимое количество отмеченных вариантов ответа.\n * Используется при валидации 2 типа уровня.\n *\n * @constant\n */\nconst REQUIRED_SELECTIONS_NUMBER = 2;\n\n/**\n * Конструктор Level Content View.\n * Контентная часть игрового экрана.\n *\n * @extends GenericView\n */\nclass LevelContentView extends GenericView {\n  /**\n   * @param {array} playerAnswers — статистика ответов игрока.\n   * @param {object} levelData — игровые данные уровня\n   */\n  constructor(playerAnswers, levelData) {\n    super();\n\n    this._playerAnswers = playerAnswers;\n    this._levelData = levelData;\n  }\n\n  /**\n   * Получение html разметки View.\n   *\n   * @type {string}\n   */\n  get markup() {\n    const levelImages = getLevelImagesMarkup(this._levelData);\n    const progressbar = getProgressbarMarkup(this._playerAnswers);\n\n    return `\n      <div class=\"game\">\n        <p class=\"game__task\">${this._levelData.task}</p>\n\n        <form class=\"game__content ${levelTypeToFormClass[this._levelData.type]}\">\n          ${levelImages}\n        </form>\n\n        <div class=\"stats\">\n          ${progressbar}\n        </div>\n      </div>`;\n  }\n\n  /**\n   * Подписка на события внутри View.\n   *\n   * @method subscribe\n   */\n  subscribe() {\n    const form = this._view.querySelector(`form.game__content`);\n\n    // Масшабирование предзагруженных изображений под размеры контейнеров.\n    const levelImages = this._view.querySelectorAll(`.game__option img`);\n    levelImages.forEach((image, i) => {\n      const containerSize = levelTypeToImageContainerSize[this._levelData.type];\n      const naturalImageSize = {\n        width: this._levelData.images[i].naturalSize.width,\n        height: this._levelData.images[i].naturalSize.height\n      };\n      const scaledImageSize = resizeImage(containerSize, naturalImageSize);\n\n      image.width = scaledImageSize.width;\n      image.height = scaledImageSize.height;\n    });\n\n    // Если тип уровня 1 изображение — валидация выбранной опции ответа.\n    if (this._levelData.type === LevelType.ONE_IMAGE) {\n      form.addEventListener(`change`, () => {\n        const selectedOption = form.querySelector(`input[type=\"radio\"]:checked`);\n\n        const isAnswerCorrect = selectedOption.value === this._levelData.images[0].correctAnswer;\n        this.onAnswer(isAnswerCorrect);\n      });\n    }\n\n    // Если тип уровня 2 изображения — валидация выбранных опций ответа.\n    if (this._levelData.type === LevelType.TWO_IMAGES) {\n      form.addEventListener(`change`, () => {\n        const selectedOptions = Array.from(form.querySelectorAll(`input[type=\"radio\"]:checked`));\n\n        if (selectedOptions.length === REQUIRED_SELECTIONS_NUMBER) {\n          const isAnswerCorrect = selectedOptions.every((selection, i) => {\n            return selection.value === this._levelData.images[i].correctAnswer;\n          });\n\n          this.onAnswer(isAnswerCorrect);\n        }\n      });\n    }\n\n    // Если тип уровня 3 изображения — валидация выбранной опции ответа.\n    if (this._levelData.type === LevelType.THREE_IMAGES) {\n      form.addEventListener(`click`, (evt) => {\n        const selectedOption = evt.target.closest(`.game__option`);\n\n        if (selectedOption) {\n          selectedOption.classList.add(`game__option--selected`);\n\n          const selectedOptionIndex = Array.from(form.querySelectorAll(`.game__option`))\n                                            .findIndex((option) => {\n                                              return option.classList.contains(`game__option--selected`);\n                                            });\n\n          const isAnswerCorrect = this._levelData.images[selectedOptionIndex].correctAnswer;\n          this.onAnswer(isAnswerCorrect);\n        }\n      });\n    }\n  }\n\n  /**\n   * Callback.\n   * Вызывается после обработки ответа игрока.\n   *\n   * @abstract\n   * @method onAnswer\n   */\n  onAnswer() {}\n}\n\nexport default LevelContentView;\n","import {AnswerType, Limit} from '../constant.js';\nimport Application from '../application.js';\nimport HeaderView from '../shared/header-view.js';\nimport LevelContentView from './level-content-view.js';\n\n/**\n * Лимиты понятий \"быстрый ответ\" / \"медленный ответ\".\n *\n * @enum {number}\n */\nconst AnswerTimeLimit = {\n  /**\n   * Время, на котором заканчивается \"быстрый ответ\".\n   * 0 - 9 секунд включительно.\n   */\n  MAX_FOR_FAST: 9,\n\n  /**\n   * Время, с которого начинается \"медленный ответ\".\n   * 21 - 30 секунд включительно.\n   */\n  MIN_FOR_SLOW: 21\n};\n\n/**\n * Шаг обновления таймера: 1000 милисекунд === 1 секунда.\n *\n * @constant\n */\nconst ONE_SECOND = 1000;\n\n/**\n * Presenter игрового экрана.\n */\nclass LevelPresenter {\n  /**\n   * @param {object} player — профиль игрока (ответы, жизни, etc)\n   * @param {object} gameLevels — игровые данные\n   */\n  constructor(player, gameLevels) {\n    // Локальное храниение профиля и игровых данных.\n    this._player = player;\n    this._gameLevels = gameLevels;\n\n    // Получение данных текущего уровня, сброс таймера к настройке по умолчанию (30 секунд).\n    this._levelData = gameLevels[player.level];\n    this._player.timer.reset();\n\n    // Header экрана.\n    this._header = new HeaderView(this._player.lives, this._player.timer);\n    this._header.onBackButtonClick = Application.renderConfirmModal;\n\n    // Контентная часть экрана.\n    this._content = new LevelContentView(this._player.answers, this._levelData);\n    this._content.onAnswer = (isAnswerCorrect) => this._changeLevel(isAnswerCorrect);\n\n    // Сборка компонентов в контейнер.\n    this._screen = document.createDocumentFragment();\n    this._screen.append(this._header.view, this._content.view);\n  }\n\n  /**\n   * Выдача собранного компонента.\n   *\n   * @type {node}\n   */\n  get screen() {\n    return this._screen;\n  }\n\n  /**\n   * Отсчет времени, отведенного на ответ.\n   * Синхронизация времени с плейсхолдером таймера на экране.\n   *\n   * Когда в запасе остается 5 секунд — у плейсхолдера включается анимация мигания.\n   * Когда время таймера истекло — игроку засчитывается ошибка и экран переключается.\n   *\n   * @method startCountdown\n   */\n  startCountdown() {\n    this._countdown = setInterval(() => {\n      this._player.timer.tick();\n\n      this._header.updateTimerPlaceholder(this._player.timer.time);\n\n      if (this._player.timer.isFinished) {\n        const isAnswerCorrect = false;\n        this._changeLevel(isAnswerCorrect);\n      }\n    }, ONE_SECOND);\n  }\n\n  /**\n   * Прекращение отсчета времени, отведенного на ответ.\n   *\n   * @method _stopCountdown\n   */\n  _stopCountdown() {\n    clearInterval(this._countdown);\n  }\n\n  /**\n   * Обновление профиля игрока и смена игрового уровня.\n   *\n   * Уровень меняется на один из двух возможных:\n   * 1. На другой игровой уровень, если игроку позволяют условия.\n   * 2. На экран финальной статистики.\n   *\n   * @method _changeLevel\n   * @param {boolean} isAnswerCorrect — вердикт по последнему ответу, корректный или нет\n   */\n  _changeLevel(isAnswerCorrect) {\n    this._stopCountdown();\n    this._updatePlayerState(isAnswerCorrect);\n\n    if (this._player.isAlive && this._player.hasNextLevel) {\n      Application.renderLevel(this._player, this._gameLevels);\n    } else {\n      Application.renderStatistic(this._player);\n    }\n  }\n\n  /**\n   * Обновление профиля игрока:\n   * 1. Оценка корректности и скорости ответа.\n   * 2. Снятие жизни за неверный ответ.\n   * 3. Увеличение игрового уровня.\n   *\n   * @method _updatePlayerState\n   * @param {boolean} isAnswerCorrect — статус последнего ответа, верный или нет\n   */\n  _updatePlayerState(isAnswerCorrect) {\n    switch (isAnswerCorrect) {\n      case true:\n        const answerTime = Limit.MAX_LEVEL_TIME - this._player.timer.time;\n\n        if (answerTime <= AnswerTimeLimit.MAX_FOR_FAST) {\n          this._player.saveAnswer(AnswerType.FAST);\n        } else if (answerTime >= AnswerTimeLimit.MIN_FOR_SLOW) {\n          this._player.saveAnswer(AnswerType.SLOW);\n        } else {\n          this._player.saveAnswer(AnswerType.STANDARD);\n        }\n        break;\n\n      case false:\n        this._player.saveAnswer(AnswerType.WRONG);\n        this._player.decreaseLives();\n        break;\n    }\n\n    this._player.levelUp();\n  }\n}\n\nexport default LevelPresenter;\n","import {AchievementToIconClass, AnswerType, Rate, ZERO_INDEX_SHIFT} from '../constant.js';\nimport getProgressbarMarkup from '../shared/get-progressbar-markup.js';\n\n/**\n * Получение разметки детализированной статистики.\n *\n * @function getStatisticTableMarkup\n * @param {array} gameRecords — список со статистикой прошедших игр\n * @return {string} — строка с разметкой\n */\nconst getStatisticTableMarkup = (gameRecords) => {\n  const gamesNumber = gameRecords.length;\n\n  const markup = new Array(gamesNumber)\n                      .fill()\n                      .map((record, i) => {\n                        // Если игрок победил:\n                        // Контейнер статистики заполняется информацией из данного блока.\n                        if (gameRecords[i].hasPlayerWon) {\n                          // Подсчет количества баллов за все верные ответы.\n                          const correctAnswersStatistic = `\n                            <tr>\n                              <td class=\"result__number\">${i + ZERO_INDEX_SHIFT}.</td>\n                              <td colspan=\"2\">\n                                ${getProgressbarMarkup(gameRecords[i].allAnswers)}\n                              </td>\n                              <td class=\"result__points\">×&nbsp;${Rate.STANDARD_REWARD}</td>\n                              <td class=\"result__total\">\n                                ${gameRecords[i].correctAnswers * Rate.STANDARD_REWARD}\n                              </td>\n                            </tr>`;\n\n                          // Бонусная статистика по быстрым ответам.\n                          const fastAnswersStatistic = ``.replace(``, () => {\n                            if (gameRecords[i].fastAnswers) {\n                              return `\n                                <tr>\n                                  <td></td>\n                                  <td class=\"result__extra\">Бонус за скорость:</td>\n                                  <td class=\"result__extra\">\n                                   ${gameRecords[i].fastAnswers}&nbsp;\n                                   <span class=\"stats__result ${AchievementToIconClass[AnswerType.FAST]}\"></span>\n                                  </td>\n                                  <td class=\"result__points\">×&nbsp;${Rate.FAST_SPEED_BONUS}</td>\n                                  <td class=\"result__total\">\n                                   ${gameRecords[i].fastAnswers * Rate.FAST_SPEED_BONUS}\n                                  </td>\n                                </tr>`;\n                            }\n\n                            return ``;\n                          });\n\n                          // Бонусная статистика по сохраненным жизням.\n                          const savedLivesStatistic = ``.replace(``, () => {\n                            if (gameRecords[i].savedLives) {\n                              return `\n                                <tr>\n                                  <td></td>\n                                  <td class=\"result__extra\">Бонус за жизни:</td>\n                                  <td class=\"result__extra\">\n                                    ${gameRecords[i].savedLives}&nbsp;\n                                    <span class=\"stats__result ${AchievementToIconClass.SAVED_LIFE}\"></span>\n                                  </td>\n                                  <td class=\"result__points\">×&nbsp;${Rate.SAVED_LIFE_BONUS}</td>\n                                  <td class=\"result__total\">\n                                    ${gameRecords[i].savedLives * Rate.SAVED_LIFE_BONUS}\n                                  </td>\n                                </tr>`;\n                            }\n\n                            return ``;\n                          });\n\n                          // Бонусная статистика по штрафам за медлительность.\n                          const slowAnswersStatistic = ``.replace(``, () => {\n                            if (gameRecords[i].slowAnswers) {\n                              return `\n                                <tr>\n                                  <td></td>\n                                  <td class=\"result__extra\">Штраф за медлительность:</td>\n                                  <td class=\"result__extra\">\n                                    ${gameRecords[i].slowAnswers}&nbsp;\n                                    <span class=\"stats__result ${AchievementToIconClass[AnswerType.SLOW]}\"></span>\n                                  </td>\n                                  <td class=\"result__points\">\n                                    ×&nbsp;${String(Rate.SLOW_SPEED_PENALTY).replace(/-/, () => ``)}\n                                  </td>\n                                  <td class=\"result__total\">\n                                    ${gameRecords[i].slowAnswers * Rate.SLOW_SPEED_PENALTY}\n                                  </td>\n                                </tr>`;\n                            }\n\n                            return ``;\n                          });\n\n                          return `\n                            <table class=\"result__table\">\n                              ${correctAnswersStatistic}\n                              ${fastAnswersStatistic}\n                              ${savedLivesStatistic}\n                              ${slowAnswersStatistic}\n\n                              <tr>\n                                <td colspan=\"5\" class=\"result__total  result__total--final\">\n                                  ${gameRecords[i].totalScore}\n                                </td>\n                              </tr>\n                            </table>`;\n                        }\n\n                        // Если игрок проиграл:\n                        // Контейнер статистики заполняется информацией из данного блока.\n                        return `\n                          <table class=\"result__table\">\n                            <tr>\n                              <td class=\"result__number\">${i + ZERO_INDEX_SHIFT}.</td>\n                              <td colspan=\"2\">\n                                ${getProgressbarMarkup(gameRecords[i].allAnswers)}\n                              </td>\n                              <td class=\"result__total\"></td>\n                              <td class=\"result__total  result__total--final\">fail</td>\n                            </tr>\n                          </table>`;\n                      }).join(``);\n\n  return markup;\n};\n\nexport default getStatisticTableMarkup;\n","import GenericView from '../generic-view.js';\nimport getStatisticTableMarkup from './get-statistic-table-markup.js';\n\n/**\n * Результирующее сообщение финального экрана.\n *\n * \"Победа\" или \"Поражение\"\n * @enum {string}\n */\nconst ResultMessage = {\n  /** Сообщение о победе. */\n  WIN: `Победа!`,\n\n  /** Сообщение о поражении. */\n  FAIL: `Поражение!`\n};\n\n/**\n * Конструктор Statistic Content View.\n * Контентная часть экрана статистики.\n *\n * @extends GenericView\n */\nclass StatisticContentView extends GenericView {\n  /**\n   * @param {array} gameRecords — список с результатами прошедших игр\n   */\n  constructor(gameRecords) {\n    super();\n\n    this._gameRecords = gameRecords;\n    this._lastGame = gameRecords[0];\n  }\n\n  /**\n   * Получение html разметки View.\n   *\n   * @type {string}\n   */\n  get markup() {\n    const resultMessage = (this._lastGame.hasPlayerWon) ? ResultMessage.WIN : ResultMessage.FAIL;\n    const statisticTable = getStatisticTableMarkup(this._gameRecords);\n\n    return `\n      <div class=\"result\">\n        <h1>\n          ${resultMessage}\n        </h1>\n\n        <table class=\"result__table\">\n          ${statisticTable}\n        </table>\n      </div>`;\n  }\n}\n\nexport default StatisticContentView;\n","import Application from '../application.js';\nimport HeaderView from '../shared/header-view.js';\nimport FooterView from '../shared/footer-view.js';\nimport StatisticContentView from './statistic-content-view.js';\n\n/**\n * Presenter экрана статистики.\n */\nclass StatisticPresenter {\n  /**\n   * @param {array} gameRecords — список с результатами прошедших игр\n   */\n  constructor(gameRecords) {\n    this._gameRecords = gameRecords;\n\n    // Header экрана.\n    this._header = new HeaderView();\n    this._header.onBackButtonClick = Application.renderConfirmModal;\n\n    // Контентная часть экрана.\n    this._content = new StatisticContentView(this._gameRecords);\n\n    // Footer экрана.\n    this._footer = new FooterView();\n\n    // Сборка компонентов в контейнер.\n    this._screen = document.createDocumentFragment();\n    this._screen.append(this._header.view, this._content.view, this._footer.view);\n  }\n\n  /**\n   * Выдача собранного компонента.\n   *\n   * @type {node}\n   */\n  get screen() {\n    return this._screen;\n  }\n}\n\nexport default StatisticPresenter;\n","import GenericView from '../generic-view.js';\n\n/**\n * Конструктор Error View.\n * Модальное окно с отображением ошибки.\n *\n * @extends GenericView\n */\nclass ErrorModalView extends GenericView {\n  /**\n   * @param {object} errorData — данные произошедшей ошибки\n   */\n  constructor(errorData) {\n    super();\n\n    // Данные ошибки.\n    this._errorData = errorData;\n  }\n\n  /**\n   * Получение html разметки View.\n   *\n   * @type {string}\n   */\n  get markup() {\n    return `\n      <section class=\"modal-error  modal-error__wrap\">\n        <div class=\"modal-error__inner\">\n\n          <h2 class=\"modal-error__title\">Произошла ошибка!</h2>\n          <p class=\"modal-error__text\">${this._errorData.message}</p>\n\n        </div>\n      </section>`;\n  }\n}\n\nexport default ErrorModalView;\n","import GenericView from '../generic-view.js';\nimport Application from '../application.js';\n\n/**\n * Конструктор Confirm Modal View.\n * Модальное окно с подтверждением обнуления игры.\n *\n * @extends GenericView\n */\nclass ConfirmModalView extends GenericView {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Получение html разметки View.\n   *\n   * @type {string}\n   */\n  get markup() {\n    return `\n      <section class=\"modal-confirm  modal-confirm__wrap\">\n        <form class=\"modal-confirm__inner\">\n\n          <button class=\"modal-confirm__close\" type=\"button\">Закрыть</button>\n\n          <h2 class=\"modal-confirm__title\">Подтверждение</h2>\n          <p class=\"modal-confirm__text\">Вы уверены что хотите начать игру заново?</p>\n\n          <div class=\"modal-confirm__btn-wrap\">\n            <button class=\"modal-confirm__btn\" data-purpose=\"ok\">Ок</button>\n            <button class=\"modal-confirm__btn\" data-purpose=\"cancel\">Отмена</button>\n          </div>\n\n        </form>\n      </section>`;\n  }\n\n  /**\n   * Подписка на события внутри View.\n   *\n   * @method subscribe\n   */\n  subscribe() {\n    // Сохранение текущего модального окна для возможности последующего закрытия.\n    this._modal = this._view.querySelector(`.modal-confirm`);\n\n    // Отлов нажатия на кнопки \"Закрыть модальное окно\" и \"Отмена\".\n    const closeButton = this._view.querySelector(`.modal-confirm__close`);\n    const cancelButton = this._view.querySelector(`.modal-confirm__btn[data-purpose=\"cancel\"]`);\n    closeButton.addEventListener(`click`, (evt) => this.onCancel(evt));\n    cancelButton.addEventListener(`click`, (evt) => this.onCancel(evt));\n\n    // Отлов нажатия на кнопку \"Ок\" — согласие на обнуление игры.\n    const confirmButton = this._view.querySelector(`.modal-confirm__btn[data-purpose=\"ok\"]`);\n    confirmButton.autofocus = true;\n    confirmButton.addEventListener(`click`, (evt) => this.onConfirm(evt));\n  }\n\n  /**\n   * Закрытие модального окна (удаление из DOM).\n   *\n   * @method _removeModal\n   */\n  _removeModal() {\n    this._modal.remove();\n  }\n\n  /**\n   * По клику на кнопке \"Ok\" — сброс игры.\n   *\n   * @method onConfirm\n   * @param {object} evt — объект события\n   */\n  onConfirm(evt) {\n    evt.preventDefault();\n\n    Application.renderGreeting();\n    this._removeModal();\n  }\n\n  /**\n   * По клику на кнопках \"Закрыть\" и \"Отмена\" —\n   * закрытие модального окна (удаление из DOM).\n   *\n   * @method onCancel\n   * @param {object} evt — объект события\n   */\n  onCancel(evt) {\n    evt.preventDefault();\n\n    this._removeModal();\n  }\n}\n\nexport default ConfirmModalView;\n","import {\n  cleanUpWorkspace,\n  fadeOutElement,\n  fadeInElement,\n  startImagesLoading,\n  saveImagesNaturalSizes\n} from './utils.js';\n\nimport ServerLoader from './server-loader.js';\nimport adaptGameLevels from './adapt-game-levels.js';\nimport getGameResult from './get-game-result.js';\n\nimport PreloaderView from './preloader/preloader-view.js';\nimport IntroPresenter from './intro/intro-presenter.js';\nimport GreetingPresenter from './greeting/greeting-presenter.js';\nimport RulesPresenter from './rules/rules-presenter.js';\nimport LevelPresenter from './level/level-presenter.js';\nimport StatisticPresenter from './statistic/statistic-presenter.js';\n\nimport ErrorModalView from './error-modal/error-modal-view.js';\nimport ConfirmModalView from './confirm-modal/confirm-modal-view.js';\n\n/**\n * Главная рабочая область приложения.\n *\n * @constant\n */\nconst WORKSPACE = document.querySelector(`.central`);\n\n/**\n * Время анимации fade в милисекундах (0.9 секунды).\n *\n * @constant\n */\nconst FADE_ANIMATION_TIME = 900;\n\n/**\n * Данные игровых уровней (заполняются в ходе запроса на сервер).\n */\nlet gameLevels = null;\n\n/**\n * Главный роутер приложения.\n */\nclass Application {\n  /**\n   * Инициализация приложения.\n   *\n   * Создание и отрисовка Intro экрана и Preloader оверлея.\n   * Загрузка и адаптация данных игровых уровней.\n   * Предзагрузка игровых изображений.\n   * Удаление Preloader.\n   * Вывод сообщения об ошибке (если произошла).\n   *\n   * @static\n   * @method start\n   */\n  static start() {\n    const preloader = new PreloaderView();\n    const intro = new IntroPresenter();\n    WORKSPACE.append(preloader.view, intro.screen);\n\n    // Загрузка и адаптация данных игровых уровней.\n    // Предзагрузка игровых изображений.\n    ServerLoader.downloadGameLevels()\n                .then((untouchedLevels) => adaptGameLevels(untouchedLevels))\n                .then((adaptedLevels) => {\n                  gameLevels = adaptedLevels;\n                })\n                .then(() => startImagesLoading(gameLevels))\n                .then((loadedImages) => saveImagesNaturalSizes(loadedImages, gameLevels))\n                .then(() => {\n                  fadeOutElement(WORKSPACE);\n\n                  const uselessPreloader = WORKSPACE.querySelector(`.preloader`);\n                  setTimeout(() => uselessPreloader.remove(), FADE_ANIMATION_TIME);\n                })\n                .then(() => {\n                  setTimeout(() => {\n                    fadeInElement(WORKSPACE);\n                    Application.renderGreeting();\n                  }, FADE_ANIMATION_TIME);\n                })\n                .catch(Application.renderErrorModal);\n\n  }\n\n  /**\n   * Создание и отрисовка приветственного экрана.\n   *\n   * @static\n   * @method renderGreeting\n   */\n  static renderGreeting() {\n    const greeting = new GreetingPresenter();\n\n    // На момент вставки контента — рабочая область не пуста.\n    // Очистка рабочей области от всего, кроме статичного Footer.\n    // Вставка контента перед Footer.\n    cleanUpWorkspace(WORKSPACE, true);\n    WORKSPACE.prepend(greeting.screen);\n  }\n\n  /**\n   * Создание и отрисовка экрана с правилами игры.\n   *\n   * @static\n   * @method renderRules\n   */\n  static renderRules() {\n    const rules = new RulesPresenter();\n\n    // На момент вставки контента — рабочая область не пуста.\n    // Прямая замена отработанной части на актуальный контент.\n    WORKSPACE.firstChild.replaceWith(rules.screen);\n  }\n\n  /**\n   * Создание и отрисовка игрового экрана.\n   *\n   * @static\n   * @method renderLevel\n   * @param {object} player — профиль игрока (ответы, жизни, etc)\n   */\n  static renderLevel(player) {\n    const level = new LevelPresenter(player, gameLevels);\n    level.startCountdown();\n\n    // На момент вставки контента — рабочая область не пуста.\n    // Очистка рабочей области от всего, кроме статичного Footer.\n    // Вставка контента перед Footer.\n    cleanUpWorkspace(WORKSPACE, true);\n    WORKSPACE.prepend(level.screen);\n  }\n\n  /**\n   * Создание и отрисовка экрана статистики.\n   *\n   * @static\n   * @method renderStatistic\n   * @param {object} player — профиль игрока (ответы, жизни, etc)\n   */\n  static renderStatistic(player) {\n    // Создание и отрисовка preloader.\n    const preloader = new PreloaderView();\n    cleanUpWorkspace(WORKSPACE);\n    WORKSPACE.append(preloader.view);\n\n    // Получение детальной статистики текущей игры.\n    const playerName = player.name;\n    const gameResult = getGameResult(player);\n\n    ServerLoader.uploadGameResult(gameResult)\n                                  .then(() => ServerLoader.downloadGameRecords(playerName))\n                                  .then((gameRecords) => {\n                                    const statistic = new StatisticPresenter(gameRecords.reverse());\n                                    WORKSPACE.prepend(statistic.screen);\n\n                                    const uselessPreloader = WORKSPACE.querySelector(`.preloader`);\n                                    fadeOutElement(uselessPreloader);\n                                    setTimeout(() => uselessPreloader.remove(), FADE_ANIMATION_TIME);\n                                  })\n                                  .catch(Application.renderErrorModal);\n  }\n\n  /**\n   * Создание и отрисовка модального окна с ошибкой.\n   *\n   * @static\n   * @method renderErrorModal\n   * @param {object} errorData — данные произошедшей ошибки\n   */\n  static renderErrorModal(errorData) {\n    const errorModal = new ErrorModalView(errorData);\n\n    // Если на странице отрисован схожий по стилизации preloader — он удаляется.\n    // Далеее отрисовывается модальное окно ошибки.\n    const uselessPreloader = WORKSPACE.querySelector(`.preloader`);\n    if (uselessPreloader) {\n      uselessPreloader.remove();\n    }\n    document.body.append(errorModal.view);\n  }\n\n  /**\n   * Создание и отрисовка модального окна с подтверждением сброса игры.\n   *\n   * @static\n   * @method renderConfirmModal\n   */\n  static renderConfirmModal() {\n    const renderedConfirmModal = document.querySelector(`.modal-confirm`);\n    if (!renderedConfirmModal) {\n      const confirmModal = new ConfirmModalView();\n      document.body.append(confirmModal.view);\n    }\n  }\n}\n\nexport default Application;\n","import Application from './application.js';\n\n// Инициализация игры.\nApplication.start();\n"],"names":[],"mappings":"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"}